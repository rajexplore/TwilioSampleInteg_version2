function setPanelMode(n){_CurrentPanelMode!=n&&Microsoft.CIFramework.setMode(n).then(function(t){log("Successfully set the panel mode "+t);_CurrentPanelMode=n}).catch(function(n){log("Failed to set mode due to: "+n)})}function clickToActHandler(n){return new Promise(function(t,i){try{let i=JSON.parse(n);var r=i.value;log("Click To Act placing a phone call to "+r);$("#dialerPhoneNumber").val(r);expandPanel();placeCall();t(!0)}catch(u){i(u)}})}function onSessionSwitchHandler(n){if(console.log(n),n!=null&&n!=undefined){var t=JSON.parse(n),i=phone.listOfSessions.get(t.sessionId);t.focused?i!=null&&(i.render(),i._timer.renderStartAndDuration(),reStoreSessionInfoToWidget(t.sessionId)):storeWidgetDataToSessionInfo(t.sessionId)}}function pageNavigateHandler(n){Microsoft.CIFramework.getFocusedSession().then(t=>{var i=phone.listOfSessions.get(t);i.pageNavigateHandlerSess(n)})}function sendKBArticleHandler(n){Microsoft.CIFramework.getFocusedSession().then(t=>{var i=phone.listOfSessions.get(t);i.sendKBArticleHandlerSess(n)})}function modeChangedHandler(n){return new Promise(function(t,i){try{let i=JSON.parse(n);var r=i.value;log("Mode changed to "+r);r==DisplayMode.Docked?expandPanel():r==DisplayMode.Hidden?HidePanel():collapsePanel();t(!0)}catch(u){i(u)}})}function notificationCIF(n){Utility.updateCallerDetailsFromCRM(n,!0,this.sessionid).then((n=>{console.log(n);var t={templateName:"msdyn_IncomingCallNotification",templateParameters:{number:n.value}},i=Microsoft.CIFramework.notifyEvent(t);i.then(function(n){console.log(n);let t=JSON.parse(n);t.actionName=="Accept"&&this.answerCall();t.actionName=="Reject"&&this.declineCall()}.bind(this),function(n){console.log(n);this.declineCall()}.bind(this))}).bind(this))}function incomingCall(n){if(phone.conn!=null){log("Can't accept another call when one is in progress");n.reject();return}phone.conn=n;expandPanel();phone.state=PhoneState.Incoming;notificationCIF(n.parameters.From);log("Received incoming call from "+n.parameters.From)}function expandPanel(){phone.mode=DisplayMode.Docked;$(".expanded").show()}function collapsePanel(){phone.mode=DisplayMode.Minimized;$(".expanded").hide()}function HidePanel(){phone.mode=DisplayMode.Hidden}function answerCall(){var n=phone.conn.parameters.From,t;n.indexOf("+")==0&&(n=n.substring(1));t={templateName:"msdyn_TwilioCallSessionTemplate",templateParameters:{fullname:callercontactname,accountID:calleraccountId,contactID:callerId}};Microsoft.CIFramework.createSession(t).then(function(n){var t=new Phone(PhoneState.CallAccepted,n);t.name=phone.conn.parameters.From;log("Accepting incoming call from "+t.name);phone.conn&&phone.conn.accept();$("#callNotesField").text("");phone.listOfSessions.set(n,t);phone.currentCallSessioId=n;Utility.updateCallerDetailsFromCRM(phone.conn.parameters.From,!0,t).then(()=>{if(t.contactId!=null&&t.contactId!=""){let i=(new Map).set("sessionId",n).set("targetRecordType","contact").set("targetRecordId",t.contactId);updateConversation(i).then(n=>{console.log("successfully updated conversation: "+n.value+", with contact Id: "+t.contactId)},n=>{console.log(n)})}else console.log("Caller details could not be fetched from CRM, skipping updateConversation api calls.")})},()=>{declineCall()})}function declineCall(){phone.conn&&(phone.conn.reject(),phone.conn=null,phone.currentCallSessioId=null);collapsePanel();log("Declining incoming call from ")}function ongoingCall(){phone.state=PhoneState.Ongoing;log("Ongoing call with "+phone.name)}function hangupCall(){phone.state=PhoneState.CallSummary;log("Hanging up call with "+phone.name)}function placeCall(){if(phone.busy)throw new Error("Cannot place call. Phone busy");var n={To:"+"+document.getElementById("dialerPhoneNumber").value};phone.state=PhoneState.Idle;log("Placing a call to "+n.To+"...");phone.name=n.To;Twilio.Device.connect(n);phone.state=PhoneState.Dialing}function searchBing(){Microsoft.CIFramework.getFocusedSession().then(n=>{var t=phone.listOfSessions.get(n),i="00000000-0000-0000-0000-000000000000";t.currentCase&&(i=t.currentCase);Microsoft.CIFramework.retrieveRecord("incident",i,"?$select=title").then(n=>{var t=JSON.parse(n),i={templateName:"Bing",templateParameters:{searchQ:t.title},isFocused:!0};Microsoft.CIFramework.createTab(i)},()=>{Microsoft.CIFramework.createTab({templateName:"Bing",templateParameters:{searchQ:""},isFocused:!0})})})}function resetPhone(){phone&&!phone.busy&&(phone.state=PhoneState.Idle)}function createCase(){Microsoft.CIFramework.getFocusedSession().then(n=>{var i=phone.listOfSessions.get(n),t={};t.title="Case for "+callercontactname;t.description=$("#callNotesField").text();calleraccountId!=null?(t["customerid_account@odata.bind"]="/accounts("+calleraccountId+")",t["primarycontactid@odata.bind"]="/contacts("+i.contactId+")"):t["customerid_contact@odata.bind"]="/contacts("+i.contactId+")";t.caseorigincode=1;i.contactId!=null&&i.contactId!=""?Microsoft.CIFramework.createRecord("incident",JSON.stringify(t)).then(n=>{var t=JSON.parse(n),r;i.currentCase=t.id;r={templateName:"entityrecord",templateParameters:{entityName:"incident",entityId:t.id},isFocused:!0};Microsoft.CIFramework.createTab(r).then(n=>{$("#caseLink").text("Case Details"),console.log("created tab with id "+n)},n=>{console.log(n)});let u=(new Map).set("sessionId",i.sessionId).set("targetRecordType","incident").set("targetRecordId",t.id);updateConversation(u).then(n=>{console.log("successfully updated conversation: "+n.value+", with incident id:"+t.id)},n=>{console.log(n)})}):console.log("Caller details could not be fetched from CRM, skipping case creation.")})}function openActivity(){var n={};Microsoft.CIFramework.getFocusedSession().then(t=>{var i=phone.listOfSessions.get(t),r;n.entityName="phonecall";i.activityId&&(n.entityId=i.activityId);r={templateName:"entityrecord",templateParameters:{entityName:"phonecall",entityId:n.entityId},isFocused:!0};Microsoft.CIFramework.createTab(r)})}function openCase(){var n={};n.entityName="incident";Microsoft.CIFramework.getFocusedSession().then(t=>{var i=phone.listOfSessions.get(t),r;if(i.currentCase)n.entityId=i.currentCase;else{alert("There is no associated case!");return}(n.entityId!=null||n.entityId!="")&&(r={templateName:"entityrecord",templateParameters:{entityName:"incident",entityId:n.entityId},isFocused:!0},Microsoft.CIFramework.createTab(r))})}function storeWidgetDataToSessionInfo(n){if(n!=null){var t=phone.listOfSessions.get(n);t!=null&&(t.notes=$("#callNotesField").text(),phone.listOfSessions.get(n,t))}}function refreshWidget(n){alert(n._state+" -- "+PhoneState.CallSummary);n._state==PhoneState.CallSummary?($("#activityLink").show(),n.currentCase?$("#caseLink").text("Case details"):$("#caseLink").text("Not available-----"),$("#caseLink").show()):($("#activityLink").hide(),$("#caseLink").hide())}function reStoreSessionInfoToWidget(n){if(n!=null){var t=phone.listOfSessions.get(n);t!=null&&$("#callNotesField").text(t.notes)}}function updateActivity(){Microsoft.CIFramework.getFocusedSession().then(n=>{var t=phone.listOfSessions.get(n),i;if(t&&t.state==PhoneState.CallSummary){if(!t.activityId){t.createCallActivity();return}i={};i.description=$("#callNotesField").text();t.notes=i.description;Microsoft.CIFramework.updateRecord("phonecall",t.activityId,JSON.stringify(i)).then(function(){openActivity()})}})}function initCTI(){Microsoft.CIFramework.setClickToAct(!0);Microsoft.CIFramework.addHandler("onclicktoact",clickToActHandler);Microsoft.CIFramework.addHandler("onmodechanged",modeChangedHandler);Microsoft.CIFramework.addHandler("onpagenavigate",pageNavigateHandler);Microsoft.CIFramework.addHandler("onsendkbarticle",sendKBArticleHandler);Microsoft.CIFramework.addHandler("onSessionSwitched",onSessionSwitchHandler);phone=new Phone(PhoneState.Idle,this.sessionid,DisplayMode.Minimized);log("Added handlers for the panel")}function initAll(){$("img#expand").click(function(){expandPanel()});$("img#collapse").click(function(){collapsePanel()});$("#answerCall").click(function(){answerCall()});$("#declineCall").click(function(){declineCall()});$("#placeCall").click(function(){placeCall()});$(".hangupCall").click(function(){Twilio.Device.disconnectAll()});$("#dialpad").click(function(){resetPhone()});$(".createCase").click(function(){createCase()});$(".searchBing").click(function(){searchBing()});$("#activityLink").click(function(){openActivity()});$("#caseLink").click(function(){openCase()});$("#addNotes").click(function(){updateActivity()});$(".holdCall").click(function(){holdUnholdCall()});log("Requesting Capability Token...");$.getJSON(twilioAppURL).done(function(n){log("Got a token.");console.log("Token: "+n.token);Twilio.Device.setup(n.token,{debug:!0});Twilio.Device.ready(function(){log("Twilio.Device Ready!");initCTI()});Twilio.Device.error(function(n){log("Twilio.Device Error: "+n.message)});Twilio.Device.connect(function(){log("Successfully established call!");ongoingCall()});Twilio.Device.disconnect(function(){log("Call ended.");hangupCall()});Twilio.Device.incoming(function(n){incomingCall(n)})}).fail(function(){log("Could not get a token from server!")})}function log(n){n=(new Date).toString()+" "+n;console.log(n)}function tryInitAll(){let n=window.getComputedStyle(document.querySelector("html"));expandedWidgetWidth=n.getPropertyValue("--expandedWidgetWidth");twilioLoaded&&ciLoaded?initAll():(twilioLoaded||console.log("Waiting for twilio libraries to load"),ciLoaded||console.log("Waiting for CIF libraries to load"),window.setTimeout(tryInitAll,100))}function holdUnholdCall(){let t,n;_currentCallHoldState===0?(n="CallHold",_currentCallHoldState=1,t={events:[{kpiEventName:"CallHold",kpiEventReason:"CallHold"}]}):(n="CallUnhold",_currentCallHoldState=0,t={events:[{kpiEventName:"CallUnhold",kpiEventReason:"CallUnhold"}]});Microsoft.CIFramework.logAnalyticsEvent(t,n).then(()=>{console.log(n+" event logged successfully.")},n=>{console.log(n)})}function updateConversation(n){return new Promise(function(t,i){if(n===undefined||n===null)return i("updateConversation input map is empty, nothing to update");Microsoft.CIFramework.getSession(n.get("sessionId")).then(r=>{let u=r.get("conversationId");if(u!=null&&u!=""){console.log("Fetched current session details via the getSession api for conversation id: "+u);let f=preparePayloadByUpdateType(n);Microsoft.CIFramework.updateConversation(r.get("conversationId"),f).then(n=>{t({value:JSON.parse(n).id})},n=>{console.log(n),i(n)})}else console.log("A live workitem is not available for this session, skipping updateConversation api calls.")},n=>{console.log(n),i(n)})})}function onSessionClosedHandler(){}function preparePayloadByUpdateType(n){let t;if(n.get("targetRecordType")!==undefined&&n.get("targetRecordType")!==null)if(n.get("targetRecordType")==="incident")t=JSON.stringify({"regardingobjectid_incident@odata.bind":"/incidents("+n.get("targetRecordId")+")"});else if(n.get("targetRecordType")==="contact")t=JSON.stringify({"msdyn_customer_msdyn_ocliveworkitem_contact@odata.bind":"/contacts("+n.get("targetRecordId")+")"});else if(n.get("targetRecordType")==="account")t=JSON.stringify({"msdyn_customer_msdyn_ocliveworkitem_account@odata.bind":"/accounts("+n.get("targetRecordId")+")"});else return reject("Unsupported entity type.");else t=JSON.stringify(n.payload);return t}var PhoneState=Object.freeze({Idle:{renderWidget:".idlePhone",renderSidePanel:".idlePhoneSidebar"},Ongoing:{renderWidget:".ongoingCall",renderSidePanel:".ongoingCallSidebar"},Incoming:{renderWidget:".incomingCall",renderSidePanel:".ongoingCallSidebar"},Dialing:{renderWidget:".outgoingCall",renderSidePanel:".ongoingCallSidebar"},CallAccepted:{renderWidget:".incomingCall",renderSidePanel:".ongoingCallSidebar"},CallSummary:{renderWidget:".callSummary",renderSidePanel:".idlePhoneSidebar"}}),CallDirection=Object.freeze({None:0,Incoming:1,Outgoing:2}),DisplayMode=Object.freeze({Minimized:0,Docked:1,Hidden:2}),expandedWidgetWidth="271fr",_CurrentPanelMode=null,_currentCallHoldState=0;class Timer{constructor(n,t,i){this._start=null;this._timerElemjQuery=n;this.refreshInterval=i;this._handle=null;this._startElemjQuery=t;this._duration=0}get refreshInterval(){return this._refreshInterval}set refreshInterval(n){this._refreshInterval=n}stop(){this._handle&&(window.clearInterval(this._handle),this._handle=null)}reset(){this.stop();$(this._timerElemjQuery).text("00");this._start=null;this._duration=0}get startTime(){return this._start}get duration(){return this._duration}start(){this._start&&this.stop();this._start=new Date;$(this._startElemjQuery).text(this._start.toLocaleTimeString());this._handle=window.setInterval(function(){var i=(new Date).getTime(),n=(i-this._start.getTime())/1e3,t;this._duration=n;t=Utility.getHHMMSS(n);Microsoft.CIFramework.getFocusedSession().then(n=>{n==phone.currentCallSessioId&&$(this._timerElemjQuery).text(t)})}.bind(this),this.refreshInterval)}renderStartAndDuration(){$(this._startElemjQuery).text(this._start.toLocaleTimeString());$(this._timerElemjQuery).text(Utility.getHHMMSS(this.duration))}}class Utility{static getHHMMSS(n){var i=Math.floor(n/3600),t;return n=n%3600,t=Math.floor(n/60),n=Math.floor(n%60),i+":"+t+":"+n}static stripParens(n){var i=n.indexOf("{")+1,t=n.lastIndexOf("}");return t=t>0?t:n.length,n.substring(i,t)}static updateCallerDetailsFromCRM(n,t,i,r){return new Promise(function(u,f){if(!n)return f("number is  empty");log("Trying to find name of caller "+n+" with searchOnly="+t);var e="?$select=contactid,_parentcustomerid_value,fullname,mobilephone,telephone1&$filter=";r?e+="contactid eq "+r:(e+="contains(mobilephone, '"+n.substring(1)+"') or contains(mobilephone, '"+n.substring(2)+"') or contains(mobilephone, '"+n.substring(3)+"')",e+=" or contains(telephone1, '"+n.substring(1)+"') or contains(telephone1, '"+n.substring(2)+"') or contains(telephone1, '"+n.substring(3)+"')");Microsoft.CIFramework.searchAndOpenRecords("contact",e,t).then(function(t){try{let n=JSON.parse(t);i?(i._name=n[0].fullname,i._contactid=n[0].contactid,callerId=n[0].contactid,callercontactname=n[0].fullname,calleraccountId=n[0]._parentcustomerid_value,log("The caller name is "+n[0].fullname),i.renderCallerName()):($("#callerids").text(n[0].fullname),callerId=n[0].contactid,callercontactname=n[0].fullname,calleraccountId=n[0]._parentcustomerid_value);u({value:n[0].fullname,isNameFound:!0})}catch(r){log("Unable to find caller name- Exception: "+r);u({value:n,isNameFound:!1})}}).catch(function(t){t||(t="Unknown Reason");log("Couldn't retrieve caller name because "+t.toString());u({value:n,isNameFound:!1})})})}}class Phone{constructor(n,t,i){this._name=null;this._contactid=null;this._number=null;this._timer=new Timer(".timer",".timeStart",1e3);this.state=n.Idle;this.conn=null;this.mode=i;this._activityId=null;this._direction=CallDirection.None;this.listOfSessions=new Map;this.currentCallSessioId=null;this._environ=null;this._caseId=null;this.sessionId=t;this.currentCase=null;Microsoft.CIFramework.getEnvironment().then(function(n){this._environ=JSON.parse(n)}.bind(this))}pageNavigateHandlerSess(n){return new Promise(function(t,i){try{let i=JSON.parse(n);if(phone&&!this.isNameValid&&this.state!=PhoneState.Idle&&this.state!=PhoneState.CallSummary){var u=i.value,r=new URL(u).searchParams;log("Page navigated to "+r.get("etn")+" pagetype "+r.get("pagetype")+" id = "+r.get("id")+" with ph = "+this.name);r.get("etn")=="contact"&&r.get("pagetype")=="entityrecord"&&(console.log("Trying to fetch record details based on record id"),Utility.updateCallerDetailsFromCRM(this._number,!0,this,r.get("id")));r.get("etn")=="incident"&&r.get("pagetype")=="entityrecord"&&(this.currentCase=r.get("id"))}t(!0)}catch(f){i(f)}}.bind(this))}createCallActivity(){var n={},t,i,r,u;n.phonenumber=this._number;n.subject="Call with "+this.name;n.directioncode=phone.direction==CallDirection.Incoming?!1:!0;n.actualdurationminutes=Math.trunc(this._timer.duration/60);n.description=$("#callNotesField").text();t=null;this.currentEnvironment&&(t=Utility.stripParens(this.currentEnvironment.userId));i={};t&&this.contactId&&(i["partyid_systemuser@odata.bind"]="/systemusers("+t+")",i.participationtypemask=this.direction==CallDirection.Incoming?2:1,r={},r["partyid_contact@odata.bind"]="/contacts("+this.contactId+")",r.participationtypemask=this.direction==CallDirection.Incoming?1:2,u=[],u[0]=i,u[1]=r,n.phonecall_activity_parties=u);this.currentCase?n["regardingobjectid_incident@odata.bind"]="/incidents("+Utility.stripParens(this.currentCase)+")":this.contactId&&(n["regardingobjectid_contact@odata.bind"]="/contacts("+this.contactId+")");Microsoft.CIFramework.createRecord("phonecall",JSON.stringify(n)).then(function(n){let t=JSON.parse(n);this._activityId=t.id;$("#activityLink").show()}.bind(this))}renderCallerName(){var t=this.name,i,n;this.name||(t="Unknown("+this._number+")");$(".callerName").text(t);i={sessionId:this.sessionId,customer:t};Microsoft.CIFramework.setSessionTitle(i);n=t.split(" ");$(".callerInit").text(n[0][0]+(n[1]?n[1][0]:n[0][1]))}updateCRMPage(){this.state==PhoneState.Ongoing&&(Utility.updateCallerDetailsFromCRM(this._number,!1,this),log("Initiated CRM page update"))}sendKBArticleHandlerSess(n){return new Promise(function(){try{let i=JSON.parse(n);var t="KB Title: "+i.title+" KB link: "+i.link;log("Send KB article invoked "+t);$(".callNotesField").append(t);$(".callNotes").show()}catch(i){}})}get name(){return this._name?this._name:this._number}get currentCase(){return this._caseId}set currentCase(n){this._caseId=n}get isNameValid(){return this._name?!0:!1}set name(n){if(!n){this._name=this._number=null;return}n.startsWith("+")?(this._number=n,Utility.updateCallerDetailsFromCRM(this._number,!0,this),log("Initiated number lookup")):this._name=n}get contactId(){return this._contactid}get direction(){return this._direction}get state(){return this._state?this._state:PhoneState.Idle}get activityId(){return this._activityId}get currentEnvironment(){return this._environ}endCall(n){this._conn&&(n==PhoneState.Incoming&&phone.conn.reject(),log("Phone state changed to idle. Disconnecting all calls"),Twilio.Device.disconnectAll(),phone.conn=null)}set state(n){if(this._state!=n){let t=this._state;this._state=n;this.updateCRMPage();this._state!=PhoneState.CallSummary&&$(".activityLink").hide();switch(this._state){case PhoneState.Idle:this._timer.reset();this.name=null;this._number=null;this._contactid=null;this._activityId=null;$(".callerName").empty();$(".callerInit").empty();$("#dialerPhoneNumber").empty();this.endCall(t);this._direction=CallDirection.None;this.currentCase=null;break;case PhoneState.CallSummary:this._timer.stop();this.endCall(t);this.createCallActivity();$("#caseLink").text("Case Details");$("#caseLink").show();$("#totaltime").hide();$("#totaltimeLabel").hide();$("#startTime").hide();$("#startTimeLabel").hide();break;case PhoneState.Incoming:this._direction=CallDirection.Incoming;this._timer.start();break;case PhoneState.Outgoing:this._direction=CallDirection.Outgoing;this._timer.start()}this.render()}}get conn(){return this._conn}set conn(n){this._conn=n;this._conn==null&&(this.currentCallSessioId=null)}get mode(){return this._mode}set mode(n){this._mode!=n&&(this._mode=n,log("Invoking setPanelMode"),setPanelMode(this._mode),log("Done setPanelmode"),this.render())}render(){this.state==PhoneState.Ongoing||this.state==PhoneState.CallSummary?$(".callNotes").show():$(".callNotes").hide();this.state==PhoneState.Idle&&$(".callNotesField").empty();this.state==PhoneState.CallSummary?$(".notesMenuItem").show():$(".notesMenuItem").hide();let n=this.mode==DisplayMode.Minimized?null:this.state.renderWidget,t=this.state.renderSidePanel;Object.values(PhoneState).forEach(i=>{i.renderWidget!=n&&$(i.renderWidget).hide(),i.renderSidePanel!=t&&$(i.renderSidePanel).hide()});$(n).show();$(t).show()}}var phone=null,callercontactname=null,calleraccountId=null,callerId=null;$(function(){tryInitAll()});